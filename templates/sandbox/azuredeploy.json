{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "VITC-Sandbox"
    },
    "vnetCIDR": {
      "type": "string",
      "defaultValue": "10.7.0.0/24",
      "metadata": {
        "description": "Enter the VNET CIDR you want to create, ex: 10.7.0.0/24."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "VITCAdmin",
      "metadata": {
        "description": "Admin User for Windows and Linux Machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin Password"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": "",
      "metadata": {
        "description": "Leave empty for stand-alone sandbox"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2"
      ],
      "defaultValue": "Standard_D3_v2"
    }
  },
  "variables": {
    "storageAccountName": "[toLower(concat(replace(parameters('vnetName'), '-', ''), 'storage'))]",
    "primarySubnetName": "[concat(parameters('vnetName'), '-Primary')]",
    "subnetCIDRParts": "[split(parameters('vnetCIDR'), '/')]",
    "subnetCIDR": "[concat(variables('subnetCIDRParts')[0], '/26')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('primarySubnetName'))]",
    "subnetIPParts": "[split(variables('subnetCIDRParts')[0], '.')]",
    "linuxIP": "[concat( variables('subnetIPParts')[0], '.', variables('subnetIPParts')[1], '.', variables('subnetIPParts')[2], '.4')]",
    "winIP": "[concat( variables('subnetIPParts')[0], '.', variables('subnetIPParts')[1], '.', variables('subnetIPParts')[2], '.5')]",
    "baseUri": "[deployment().properties.templateLink.uri]",
    "windowsVmTemplateURL": "[uri(variables('baseUri'),'../primitives/windowsvm.json')]",
    "windowsVmScriptURL": "[uri(variables('baseUri'),'../../ps-scripts/configureWindows.ps1')]",
    "linuxVmScriptURL": "[uri(variables('baseUri'),'../../scripts/provision_rhel_machine.sh')]",
    "winVMName": "VITCWinSandbox",
    "linuxVMName": "VITCLinuxSandbox",
    "dnsServers": "[if(empty(parameters('dnsServers')), json('[]'), parameters('dnsServers'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "name": "[parameters('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetCIDR')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('primarySubnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetCIDR')]"
            }
          }
        ],
        "dhcpOptions": {
          "dnsServers": "[variables('dnsServers')]"
        }
      }
    },
    {
      "name": "[variables('winVMName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('windowsVmTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('winVMName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "fixedPrivateIp": {
            "value": "[variables('winIP')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "diagStorageAccountId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          },
          "assignPublicIP": {
            "value": true
          },
          "imagePublisher": {
            "value": "MicrosoftWindowsDesktop"
          },
          "imageOffer": {
            "value": "Windows-10"
          },
          "imageSku": {
            "value": "RS3-Pro"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('winVMName'), '/config')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('winVMName'))]"
      ],
      "tags": {
        "displayName": "config-win"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('windowsVmScriptURL')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File configureWindows.ps1 ',variables('linuxIP'))]"
        }
      }
    },
    {
      "name": "[variables('linuxVMName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('windowsVmTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('linuxVMName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "fixedPrivateIp": {
            "value": "[variables('linuxIP')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "diagStorageAccountId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          },
          "imagePublisher": {
            "value": "OpenLogic"
          },
          "imageOffer": {
            "value": "CentOS"
          },
          "imageSku": {
            "value": "7.3"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('linuxVMName'), '/config')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('linuxVMName'))]"
      ],
      "tags": {
        "displayName": "config-linux"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('linuxVmScriptURL')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "./provision_rhel_machine.sh"
        }
      }
    }
  ],
  "outputs": {}
}